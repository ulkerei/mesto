(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var n,r;return n=t,(r=[{key:"_check",value:function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}},{key:"getProfileInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then((function(t){return e._check(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then((function(t){return e._check(t)}))}},{key:"setUserInfo",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.job})}).then((function(e){return t._check(e)}))}},{key:"setAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then((function(e){return t._check(e)}))}},{key:"postNewCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.place,link:e.link})}).then((function(e){return t._check(e)}))}},{key:"deleteOwnersCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._check(e)}))}},{key:"like",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return t._check(e)}))}},{key:"unlike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._check(e)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._place=t.place||t.name,this._link=t.link,this._likes=t.likes||[],this._id=t._id,this._owner=t.owner,this._self="c1e8bf3d88660c8a2b4bf8a0",this._selector=n,this._template=document.querySelector(n).content,this._element=this._template.querySelector(".cards__element").cloneNode(!0),this._like=this._element.querySelector(".cards__like"),this._counter=this._element.querySelector(".cards__likes-counter"),this._del=this._element.querySelector(".cards__delete"),this._view=this._element.querySelector(".cards__image"),this._handelView=r,this._openDeletePopup=o,this._handelLike=i}var t,r;return t=e,(r=[{key:"likeCard",value:function(){this._like.classList.toggle("cards__like_state_active")}},{key:"updateCounter",value:function(e){this._counter.textContent=e}},{key:"_setEventListeners",value:function(){var e=this;this._view.addEventListener("click",(function(){return e._handelView(e._place,e._link)})),this._like.addEventListener("click",(function(){return e._handelLike(e._id,e._element)})),this._del.addEventListener("click",(function(){return e._openDeletePopup(e._element)}))}},{key:"createCard",value:function(){var e=this;return this._view.src=this._link,this._view.alt=this._place,this._element.querySelector(".cards__place").textContent=this._place,this._counter.textContent=this._likes.length,this._owner._id!==this._self&&this._del.classList.add("cards__delete_hidden"),this._likes.some((function(t){return t._id===e._self}))&&this._like.classList.add("cards__like_state_active"),this._setEventListeners(),this._element}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(e){e.validity.valid?i._hideInputError(e):i._showInputError(e,e.validationMessage)},(r="_checkValidity")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inputErrorClass=t.inputErrorClass,this._errorActiveClass=t.errorActiveClass,this._errorTypeTemplate=t.errorTypeTemplate,this._element=n,this._inputList=Array.from(this._element.querySelectorAll(this._inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){this._errorElement=this._element.querySelector("".concat(this._errorTypeTemplate).concat(e.id)),e.classList.add(this._inputErrorClass),this._errorElement.textContent=t,this._errorElement.classList.add(this._errorActiveClass)}},{key:"_hideInputError",value:function(e){this._errorElement=this._element.querySelector("".concat(this._errorTypeTemplate).concat(e.id)),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorActiveClass),this._errorElement.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._buttonElement.setAttribute("disabled",!0):this._buttonElement.removeAttribute("disabled")}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkValidity(t),e._toggleButtonState()}))}))}},{key:"inactivateSubmitButton",value:function(){this._element.querySelector(".popup__button").setAttribute("disabled",!0)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._buttonElement=this._element.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._setEventListeners()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._target=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"placeItem",value:function(e,t){t?this._target.append(e):this._target.prepend(e)}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._button=this._popup.querySelector(".popup__button")}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"closePopup",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup__close-x")||t.target.classList.contains("popup__overlay"))&&e.closePopup()}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function _(e,t){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_(e,t)}function y(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._viewImage=t._popup.querySelector(".popup__view-image"),t._viewLocation=t._popup.querySelector(".popup__view-location"),t}return t=c,(n=[{key:"openPopup",value:function(e,t){this._viewImage.src=t,this._viewImage.alt=e,this._viewLocation.textContent=e,f(d(c.prototype),"openPopup",this).call(this)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(s);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function E(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._handleFormSubmit=t,n._form=n._popup.querySelector(".popup__form"),n._inputs=Array.from(n._form.querySelectorAll(".popup__input")),n}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;w(S(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault();var n=e._getInputValues();e._handleFormSubmit(n),e.closePopup()}))}},{key:"closePopup",value:function(){w(S(c.prototype),"closePopup",this).call(this),this._form.reset()}},{key:"showLoading",value:function(e){this._button.textContent=e?"Сохранение...":"Сохранить"}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(s);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function T(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._handleFormSubmit=t,n._form=n._popup.querySelector(".popup__form"),n}return t=c,(n=[{key:"openPopup",value:function(e){this._element=e,L(q(c.prototype),"openPopup",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;L(q(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(),e.closePopup()}))}},{key:"setSubmit",value:function(e){this._handleSubmit=e}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(s);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t.name),this._job=document.querySelector(t.job),this._avatar=document.querySelector(t.avatar)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._info={name:this._name.textContent,job:this._job.textContent},this._info}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._job.textContent=e.job||e.about,this._id=e._id}},{key:"setAvatar",value:function(e){this._avatar.style.backgroundImage="url(".concat(e.avatar,")")}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inputErrorClass:"popup__input_type_error",errorActiveClass:"popup__input-error_active",errorTypeTemplate:".popup__input-error_type_"},B=document.querySelector(".profile__button_type_add"),V=document.querySelector(".profile__button_type_edit"),D=document.querySelector(".profile__button_type_edit-avatar"),N="#cards__element",F=document.querySelector(".popup__form_type_add"),J=document.querySelector(".popup__form_type_edit"),G=document.querySelector(".popup__form_type_avatar"),H=new t({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-48",headers:{authorization:"8363e0f5-2c67-4395-bf21-4f6fde47b262","Content-Type":"application/json"}}),z=new u({renderer:function(e){var t=re(e,N,(function(){return oe(e.name,e.link)}),(function(){return te(e,t)}),(function(){return ne(e,t)}));z.placeItem(t,!0)}},".cards"),M=new i(x,F),K=new i(x,J),Q=new i(x,G),W=new v(".popup_type_viewer"),X=new R(".popup_type_confirm"),Y=new O(".popup_type_add",(function(e){Y.showLoading(!0),H.postNewCard(e).then((function(e){var t=re(e,N,(function(){return oe(e.place,e.link)}),(function(){return te(e,t)}),(function(){return ne(e,t)}));z.placeItem(t,!1)})).catch((function(e){console.log(e)})).finally((function(){return Y.showLoading(!1)}))})),Z=new O(".popup_type_edit",(function(e){Z.showLoading(!0),H.setUserInfo(e).then((function(e){ee.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){return Z.showLoading(!1)}))})),$=new O(".popup_type_avatar",(function(e){$.showLoading(!0),H.setAvatar(e).then((function(e){ee.setAvatar(e)})).catch((function(e){console.log(e)})).finally((function(){return $.showLoading(!1)}))})),ee=new A({name:".profile__name",job:".profile__job",avatar:".profile__avatar"});function te(e,t){X.openPopup(),X.setSubmit((function(){H.deleteOwnersCard(e._id).then((function(){t.remove(),t=null,X.closePopup()})).catch((function(e){console.log(e)}))}))}function ne(e,t){t.querySelector(".cards__like").classList.contains("cards__like_state_active")?H.unlike(e._id).then((function(e){t.cardItem.updateCounter(e.likes.length)})).catch((function(e){console.log(e)})):H.like(e._id).then((function(e){t.cardItem.updateCounter(e.likes.length)})).catch((function(e){console.log(e)})),t.querySelector(".cards__like").classList.toggle("cards__like_state_active")}function re(e,t,n,o,i){var c=new r(e,t,n,o,i),u=c.createCard();return u.cardItem=c,u}function oe(e,t){W.openPopup(e,t)}H.getProfileInfo().then((function(e){ee.setUserInfo(e),ee.setAvatar(e)})).catch((function(e){console.log(e)})),H.getInitialCards().then((function(e){z.renderItems(e)})).catch((function(e){console.log(e)})),K.enableValidation(),M.enableValidation(),Q.enableValidation(),W.setEventListeners(),Y.setEventListeners(),Z.setEventListeners(),$.setEventListeners(),X.setEventListeners(),V.addEventListener("click",(function(){var e=document.querySelector(".popup__input_type_name"),t=document.querySelector(".popup__input_type_job"),n=ee.getUserInfo();ee.setUserInfo(n),e.value=n.name,t.value=n.job,K.resetValidation(),Z.openPopup()})),B.addEventListener("click",(function(){M.resetValidation(),Y.openPopup()})),D.addEventListener("click",(function(){Q.resetValidation(),$.openPopup()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,